<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security.xsd">


    <!--配置不拦击的资源-->
    <security:http security="none" pattern="/pages/login.jsp" />
    <security:http security="none" pattern="/pages/error.jsp" />
    <security:http security="none" pattern="/css/**" />
    <security:http security="none" pattern="/img/**" />
    <security:http security="none" pattern="/js/**" />
    <security:http security="none" pattern="/plugins/**" />
    <!--配置不拦击的资源-->

    <security:http auto-config="true" use-expressions="false">
        <!-- intercept-url定义一个过滤规则 pattern表示对哪些url进行权限控制，access属性表示在请求对应
        的URL时需要什么权限，
        默认配置时它应该是一个以逗号分隔的角色列表，请求的用户只需拥有其中的一个角色就能成功访问对应
        的URL -->
        <security:intercept-url pattern="/**"  access="ROLE_ADMIN , ROLE_USER" />
        <!-- auto-config配置后，不需要在配置下面信息 <security:form-login /> 定义登录表单信息
        <security:http-basic/> <security:logout /> -->

        <!--这一步 会优先执行，之后的每个url 都会 进行 access 的角色校验 ... (换句话说，这一步骤智智能拦截密码和用户名不对的情况)-->
        <security:form-login
                login-page="/pages/login.jsp"
                login-processing-url="/login.do"
                username-parameter="username"
                password-parameter="password"
                default-target-url="/pages/main.jsp"
                authentication-failure-url="/pages/error.jsp"
                authentication-success-forward-url="/pages/main.jsp"
        />
        <!--关闭跨域请求 防止 403 forbbiden-->
        <security:csrf disabled="true"/>
        <!--退出登陆-->
        <security:logout invalidate-session="true" logout-url="/logout.do" logout-success-url="/pages/login.jsp" />


    </security:http>



    <!--配置数据库-->
    <security:authentication-manager>
        <security:authentication-provider user-service-ref="userService">
            <!-- 配置加密的方式 -->
            <security:password-encoder ref="passwordEncoder"/>
        </security:authentication-provider>

    </security:authentication-manager>




    <!--未配置数据库-->

   <!-- <security:authentication-manager>
        <security:authentication-provider>
            <security:user-service>
                <security:user name="user" password="{noop}user"
                               authorities="ROLE_USER" />
                <security:user name="admin" password="{noop}admin"
                               authorities="ROLE_ADMIN" />
            </security:user-service>
        </security:authentication-provider>
    </security:authentication-manager>-->


    <!--配置加密类-->
    <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>



</beans>